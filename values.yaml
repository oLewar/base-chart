# Default values for base-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: image
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "tag"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

JAVA_OPTS: []
#   - "-Param1"
#   - "-Param2"

JMX_OPTS: []
#   - "-DParam1"
#   - "-DParam2"

env: {}
#  MYSQL_HOST: "mysql:3306"
#  KAFKA_HOST: "kafka:9092"

terminationGracePeriodSeconds: 30

#lifecycle:
#  preStop:
#    httpGet:
#    path: /shutdown
#    port: 4000

livenessProbe:
  httpGet:
    path: /health
    port: http

readinessProbe:
  httpGet:
    path: /health
    port: http


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  services:
  - name: http
    targetPort: 8080
    port: 8080
    protocol: TCP
    # nodePort: 30080
  - name: jmx
    targetPort: 19016
    port: 19016
    protocol: TCP
    # nodePort: 30016
  
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  servicePort: "8080"

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

initContainers: []
sidecars: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumeMounts: []
#  - mountPath: /etc/timezone
#    name: <volumeName>
#    subPath: ..data/timezone

fileLoad:
  enabled: false
  mountPath: /app/config

servicemonitor:
  enabled: false
#  prometheus:
#    namespace: monitoring
#    labels:
#      release: kube-prometheus-stack
#      app: kube-prometheus-stack
#  port: app
#  path: actuator/prometheus
#  interval: 10s

prometheusrule:
  enabled: flase
#  prometheus:
#    namespace: monitoring
#    labels:
#      release: kube-prometheus-stack
#      app: kube-prometheus-stack
#  groups:
#    - name: base-chart
#      rules:
#        - alert: test-base-chart
#          annotations:
#            description: Test  
#            summary: Test for testing alert                                       
#          expr: vector(0) == 0
#          for: 1m
#          labels:
#            severity: warning


volumeMounts: []
#  - mountPath: /etc/timezone
#    name: <volumeName>
#    subPath: ..data/timezone

fileLoad:
  enabled: false
  mountPath: /app/config

#files:
#  - mountPath: /etc/timezone
#    data:
#      timezone: |-
#        Europe/Kiev

#binaryFiles:
#  - mountPath: /etc/localtime
#    data:
#      localtime: |-
#        VFppZjIAAAAAAAAAAAAAAAAAAAAAAAANAAAADQAAAAAAAAB5AAAADQAAACKAAAAAqhmnZLWkGWDK
#        zS7QzOdLEM2pF5DOokMQzs2ocBUnp9AWGNxAFwjbUBf6D8AY6g7QGdtDQBrMk9AbvKDwHKyR8B2c
#        ..............

